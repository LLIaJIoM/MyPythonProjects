#!/usr/bin/env python3
"""
–¢–µ—Å—Ç–æ–≤—ã–π —Å–∫—Ä–∏–ø—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Ä–∞–±–æ—Ç—ã –±–æ—Ç–∞ —Å —à—É—Ç–∫–∞–º–∏
"""

import os
import asyncio
from joke_generator import make_joke, make_joke_alternative
from news_parser import get_combined_news
from telegram_sender import test_telegram_connection, send_message

def test_joke_generation():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç –≥–µ–Ω–µ—Ä–∞—Ü–∏—é —à—É—Ç–æ–∫"""
    print("üé≠ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ —à—É—Ç–æ–∫...")
    print("=" * 40)
    
    test_news = [
        "–í –ú–æ—Å–∫–≤–µ –ø—Ä–æ—à—ë–ª –¥–æ–∂–¥—å.",
        "–¶–µ–Ω—ã –Ω–∞ –±–µ–Ω–∑–∏–Ω –≤—ã—Ä–æ—Å–ª–∏ –Ω–∞ 5%.",
        "–ù–æ–≤—ã–π —Ñ–∏–ª—å–º —Å–æ–±—Ä–∞–ª —Ä–µ–∫–æ—Ä–¥–Ω—É—é –∫–∞—Å—Å—É.",
        "–£—á—ë–Ω—ã–µ –æ—Ç–∫—Ä—ã–ª–∏ –Ω–æ–≤—ã–π –≤–∏–¥ –∂–∏–≤–æ—Ç–Ω—ã—Ö."
    ]
    
    for i, news in enumerate(test_news, 1):
        print(f"\nüì∞ –¢–µ—Å—Ç {i}: {news}")
        try:
            joke = make_joke(news)
            print(f"üé≠ –®—É—Ç–∫–∞: {joke}")
            
            # –¢–µ—Å—Ç–∏—Ä—É–µ–º –∞–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω—É—é –º–æ–¥–µ–ª—å
            alt_joke = make_joke_alternative(news)
            print(f"üé≠ –ê–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω–∞—è: {alt_joke}")
            
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞: {e}")

def test_news_parsing():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç –ø–∞—Ä—Å–∏–Ω–≥ –Ω–æ–≤–æ—Å—Ç–µ–π"""
    print("\nüì∞ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø–∞—Ä—Å–∏–Ω–≥–∞ –Ω–æ–≤–æ—Å—Ç–µ–π...")
    print("=" * 40)
    
    try:
        news_list = get_combined_news()
        print(f"‚úÖ –ü–æ–ª—É—á–µ–Ω–æ {len(news_list)} –Ω–æ–≤–æ—Å—Ç–µ–π")
        
        for i, news in enumerate(news_list[:3], 1):
            print(f"\n{i}. {news['title']}")
            print(f"   –ò—Å—Ç–æ—á–Ω–∏–∫: {news.get('source', '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ')}")
            print(f"   –°—Å—ã–ª–∫–∞: {news['link']}")
            
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø–∞—Ä—Å–∏–Ω–≥–∞ –Ω–æ–≤–æ—Å—Ç–µ–π: {e}")

async def test_telegram_sending():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç –æ—Ç–ø—Ä–∞–≤–∫—É –≤ Telegram"""
    print("\nüì± –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–∫–∏ –≤ Telegram...")
    print("=" * 40)
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ
    if not test_telegram_connection():
        print("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–¥–∫–ª—é—á–∏—Ç—å—Å—è –∫ Telegram")
        return
    
    # –¢–µ—Å—Ç–∏—Ä—É–µ–º –æ—Ç–ø—Ä–∞–≤–∫—É —Å–æ–æ–±—â–µ–Ω–∏—è
    test_message = """ü§ñ <b>–¢–µ—Å—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç –±–æ—Ç–∞ —Å —à—É—Ç–∫–∞–º–∏!</b>

üé≠ <b>–¢–µ—Å—Ç–æ–≤–∞—è —à—É—Ç–∫–∞:</b>
–ü–æ—á–µ–º—É –ø—Ä–æ–≥—Ä–∞–º–º–∏—Å—Ç—ã –ø—É—Ç–∞—é—Ç –†–æ–∂–¥–µ—Å—Ç–≤–æ –∏ –•—ç–ª–ª–æ—É–∏–Ω? –ü–æ—Ç–æ–º—É —á—Ç–æ Oct 31 == Dec 25!

üìä <b>–°—Ç–∞—Ç—É—Å:</b> –ë–æ—Ç —Ä–∞–±–æ—Ç–∞–µ—Ç
üîó <a href="https://t.me/your_channel">–ö–∞–Ω–∞–ª</a>

#—Ç–µ—Å—Ç #–±–æ—Ç #—é–º–æ—Ä"""
    
    try:
        success = await send_message(test_message)
        if success:
            print("‚úÖ –¢–µ—Å—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ!")
        else:
            print("‚ùå –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Ç–µ—Å—Ç–æ–≤–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è")
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏: {e}")

def test_environment():
    """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è"""
    print("üîß –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è...")
    print("=" * 40)
    
    required_vars = [
        "TELEGRAM_BOT_TOKEN",
        "TELEGRAM_CHANNEL_ID"
    ]
    
    for var in required_vars:
        value = os.environ.get(var, "")
        if value:
            print(f"‚úÖ {var}: {'*' * len(value)}")
        else:
            print(f"‚ùå {var}: –ù–ï –£–°–¢–ê–ù–û–í–õ–ï–ù")
    
    print("\nüí° –î–ª—è —É—Å—Ç–∞–Ω–æ–≤–∫–∏ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ:")
    print("export TELEGRAM_BOT_TOKEN='–≤–∞—à_—Ç–æ–∫–µ–Ω'")
    print("export TELEGRAM_CHANNEL_ID='@–≤–∞—à_–∫–∞–Ω–∞–ª'")

async def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è"""
    print("üß™ –ö–æ–º–ø–ª–µ–∫—Å–Ω–æ–µ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –±–æ—Ç–∞ —Å —à—É—Ç–∫–∞–º–∏")
    print("=" * 50)
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è
    test_environment()
    
    # –¢–µ—Å—Ç–∏—Ä—É–µ–º –≥–µ–Ω–µ—Ä–∞—Ü–∏—é —à—É—Ç–æ–∫
    test_joke_generation()
    
    # –¢–µ—Å—Ç–∏—Ä—É–µ–º –ø–∞—Ä—Å–∏–Ω–≥ –Ω–æ–≤–æ—Å—Ç–µ–π
    test_news_parsing()
    
    # –¢–µ—Å—Ç–∏—Ä—É–µ–º –æ—Ç–ø—Ä–∞–≤–∫—É –≤ Telegram
    await test_telegram_sending()
    
    print("\n‚úÖ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ!")

if __name__ == "__main__":
    asyncio.run(main()) 