# joke_generator.py
import os
import requests

# –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è IO Intelligence API
IO_API_BASE_URL = "https://api.intelligence.io.solutions/api/v1"
IO_API_KEY = "io-v2-eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCJ9.eyJvd25lciI6IjY3YzM5OGE5LTZkNzYtNDMyZS1iYTlhLTY5ODZiODVjMmRkOCIsImV4cCI6NDkwNjQ4MTUwOX0.m0CayY7WgNNksnxAj-QAhsEYUEJNKbpujJoSm7sFwEwFxOeCNrrQx3jGLAh-vCwKd7wAvvDvFg3MnNjj8FIEdg"

def get_headers():
    """–í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –∑–∞–≥–æ–ª–æ–≤–∫–∏ –¥–ª—è API –∑–∞–ø—Ä–æ—Å–æ–≤"""
    return {
        "accept": "application/json",
        "Authorization": f"Bearer {IO_API_KEY}",
        "Content-Type": "application/json"
    }

def make_joke(news_text):
    """–ì–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç –æ—Å—Ç—Ä—É—é —Å–∞—Ä–∫–∞—Å—Ç–∏—á–Ω—É—é —à—É—Ç–∫—É –Ω–∞ –æ—Å–Ω–æ–≤–µ –Ω–æ–≤–æ—Å—Ç–∏"""
    try:
        # –ò—Å–ø–æ–ª—å–∑—É–µ–º –º–æ–¥–µ–ª—å CohereForAI/c4ai-command-r-plus-08-2024 –¥–ª—è –ª—É—á—à–∏—Ö —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤
        url = f"{IO_API_BASE_URL}/chat/completions"
        
        messages = [
            {
                "role": "system",
                "content": "–¢—ã —Å–∞—Ç–∏—Ä–∏–∫. –°–æ–∑–¥–∞–≤–∞–π –∫–æ—Ä–æ—Ç–∫–∏–µ –æ—Å—Ç—Ä—ã–µ —à—É—Ç–∫–∏. –û—Ç–≤–µ—á–∞–π —Ç–æ–ª—å–∫–æ —à—É—Ç–∫–æ–π, –±–µ–∑ –ª–∏—à–Ω–µ–≥–æ —Ç–µ–∫—Å—Ç–∞."
            },
            {
                "role": "user",
                "content": f"–®—É—Ç–∫–∞ –ø—Ä–æ: {news_text}"
            }
        ]
        
        data = {
            "model": "meta-llama/Llama-4-Maverick-17B-128E-Instruct-FP8",
            "messages": messages,
            "max_tokens": 60,
            "temperature": 0.8,
        }
        
        response = requests.post(url, headers=get_headers(), json=data, timeout=60)
        response.raise_for_status()
        result = response.json()
        
        joke = result["choices"][0]["message"]["content"].strip()
        
        # –£–±–∏—Ä–∞–µ–º –ª–∏—à–Ω–∏–µ –∫–∞–≤—ã—á–∫–∏ –∏ —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ
        joke = joke.replace('"', '').replace('"', '').replace('"', '')
        
        return joke
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ —à—É—Ç–∫–∏: {e}")
        # Fallback —à—É—Ç–∫–∞
        return f"ü§° –ê –≤–æ—Ç –∏ –Ω–æ–≤–æ—Å—Ç—å: {news_text[:50]}... –ö–ª–∞—Å—Å–∏–∫–∞!"

def make_joke_alternative(news_text):
    """–ê–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è —Å –¥—Ä—É–≥–æ–π –º–æ–¥–µ–ª—å—é"""
    try:
        url = f"{IO_API_BASE_URL}/chat/completions"
        
        messages = [
            {
                "role": "system",
                "content": "–¢—ã –∫–æ–º–∏–∫-—Å–∞—Ç–∏—Ä–∏–∫. –°–æ–∑–¥–∞–≤–∞–π –∫–æ—Ä–æ—Ç–∫–∏–µ, –æ—Å—Ç—Ä—ã–µ –∏ —Å–∞—Ä–∫–∞—Å—Ç–∏—á–Ω—ã–µ —à—É—Ç–∫–∏. –ò—Å–ø–æ–ª—å–∑—É–π –∏—Ä–æ–Ω–∏—é –∏ —á—ë—Ä–Ω—ã–π —é–º–æ—Ä. –û—Ç–≤–µ—á–∞–π —Ç–æ–ª—å–∫–æ —à—É—Ç–∫–æ–π."
            },
            {
                "role": "user",
                "content": f"–ù–æ–≤–æ—Å—Ç—å: {news_text}. –°–¥–µ–ª–∞–π –æ—Å—Ç—Ä—É—é —à—É—Ç–∫—É."
            }
        ]
        
        data = {
            "model": "deepseek-ai/DeepSeek-R1-0528",
            "messages": messages,
            "max_tokens": 100,
            "temperature": 0.9,
        }
        
        response = requests.post(url, headers=get_headers(), json=data, timeout=60)
        response.raise_for_status()
        result = response.json()
        
        return result["choices"][0]["message"]["content"].strip()
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –∞–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω–æ–π –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏: {e}")
        return make_joke(news_text)  # Fallback –∫ –æ—Å–Ω–æ–≤–Ω–æ–π —Ñ—É–Ω–∫—Ü–∏–∏

# –ü—Ä–∏–º–µ—Ä –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è:
if __name__ == "__main__":
    test_news = "–í –ú–æ—Å–∫–≤–µ –ø—Ä–æ—à—ë–ª –¥–æ–∂–¥—å."
    print("üé≠ –¢–µ—Å—Ç –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ —à—É—Ç–∫–∏:")
    print(f"–ù–æ–≤–æ—Å—Ç—å: {test_news}")
    print(f"–®—É—Ç–∫–∞: {make_joke(test_news)}")    